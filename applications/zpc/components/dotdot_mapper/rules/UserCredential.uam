// User Credential CC
def zwUSER_CREDENTIAL_USER_COUNT                          0x8302
def zwUSER_CREDENTIAL_SUPPORTED_CREDENTIAL_RULES          0x8303
def zwUSER_CREDENTIAL_SUPPORTED_USER_TYPES                0x8308
def zwUSER_CREDENTIAL_SUPPORT_CREDENTIAL_CHECKSUM         0x8309
def zwUSER_CREDENTIAL_SUPPORT_ADMIN_PIN_CODE              0x830A
def zwUSER_CREDENTIAL_SUPPORT_ADMIN_PIN_CODE_DEACTIVATION 0x830B

// This represents short CamelCase labels the attributes in the DotDot UserCredential cluster
def zb_SupportedUserUniqueIdentifiers 0xfd080000
def zb_SupportedCredentialRules 0xfd080001
// def zb_SupportedCredentialTypes 0xfd080002 Binding is done in user_credential directly
def zb_SupportedUserTypes 0xfd080003
def zb_SupportCredentialChecksum 0xfd080004
def zb_SupportAdminPinCode 0xfd080005
def zb_SupportAdminPinCodeDeactivation 0xfd080006
// def zb_AdminPinCode 0xfd080007 Binding is done in user_credential_cluster_server directly

scope 0  chain_reaction(0) {
    r'zb_SupportedUserUniqueIdentifiers =  r'zwUSER_CREDENTIAL_USER_COUNT
    r'zb_SupportedCredentialRules = r'zwUSER_CREDENTIAL_SUPPORTED_CREDENTIAL_RULES
    r'zb_SupportedUserTypes = r'zwUSER_CREDENTIAL_SUPPORTED_USER_TYPES

    r'zb_SupportCredentialChecksum = r'zwUSER_CREDENTIAL_SUPPORT_CREDENTIAL_CHECKSUM
    r'zb_SupportAdminPinCode = r'zwUSER_CREDENTIAL_SUPPORT_ADMIN_PIN_CODE
    r'zb_SupportAdminPinCodeDeactivation = r'zwUSER_CREDENTIAL_SUPPORT_ADMIN_PIN_CODE_DEACTIVATION
}